version: '3.8'

services:
  nginx:
    container_name: nginx-container
    networks:
      - marketingAgency
    image: nginx:latest
    ports:
      - "8080:80"
    depends_on:
      - next-web
  next-web:
    container_name: web-container
    networks:
      - marketingAgency
    build: 
      context: .
      dockerfile: dockerfile.web
    ports:
      - "$FRONTEND_PORT:$FRONTEND_PORT"
    volumes:
      - .:/code
    develop:
      watch:
        - action: sync
          path: .
          target: /code
          ignore:
            - .git
            - node_modules
            - backend
            - bun.lockb
    depends_on:
      - backend-django

  backend-django: 
    container_name: django-container
    networks:
      - marketingAgency
    build: 
      context: .
      dockerfile: dockerfile.django
    volumes:
      - .:/code
    ports:
      - "$BACKEND_PORT:80"
    depends_on:
      - postgres-database
    develop:
      watch:
        - action: sync
          path: .
          target: /code
          ignore:
            - .git
            - node_modules
            - env
            - static
            - sql
            - media
            - db.sqlite3
    environment:
      - PORT=$BACKEND_PORT
      - SECRET_KEY=$SECRET_KEY
      - DEBUG=$DEBUG
      - ALLOWED_HOSTS_DEV=$ALLOWED_HOSTS_DEV
      - CSRF_TRUSTED_ORIGINS_DEV=$CSRF_TRUSTED_ORIGINS_DEV
      - ALLOWED_HOSTS_DEPLOY=$ALLOWED_HOSTS_DEPLOY
      - CORST_ORIGIN_WHITELIST_DEPLOY=$CORST_ORIGIN_WHITELIST_DEPLOY
      - CSRF_TRUSTED_ORIGINS_DEPLOY=$CSRF_TRUSTED_ORIGINS_DEPLOY
      - DATABASE_URL=$DATABASE_URL
      - DOMAIN_DEV=$DOMAIN_DEV
      - DOMAIN_PRODUCTION=$DOMAIN_PRODUCTION
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_HOST=$POSTGRES_HOST

  postgres-database:
    container_name: postgres-container
    networks:
      - marketingAgency
    image: postgres:latest
    ports:
      - "5432:$POSTGRES_PORT"
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - postgres_data:/var/lib/postgresql/data 

volumes:
  postgres_data:

networks:
  marketingAgency:
    driver: bridge
